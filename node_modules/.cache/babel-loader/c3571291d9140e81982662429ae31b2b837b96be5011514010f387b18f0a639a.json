{"ast":null,"code":"var _jsxFileName = \"/Users/kelvin/Workspace/CS180/proj2/proj2_website/proj2/src/components/Section.js\";\nimport React from 'react';\nimport ImageCard from './ImageCard';\nimport ImageGrid from './ImageGrid';\nimport 'katex/dist/katex.min.css';\nimport Latex from 'react-latex-next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Section({\n  id,\n  title,\n  content\n}) {\n  const imageContent = content.filter(item => item.type === 'image');\n  const textContent = content.filter(item => item.type !== 'image');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: id,\n    className: \"mb-16\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6 text-center\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-6\",\n      children: [textContent.map((item, index) => {\n        if (item.type === 'paragraph') {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg text-gray-400 leading-relaxed break-words\",\n            children: item.text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this);\n        }\n        if (item.type === 'math') {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center text-2xl text-gray-300 break-words leading-relaxed\",\n            children: /*#__PURE__*/_jsxDEV(Latex, {\n              children: item.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this);\n        }\n        return null;\n      }), imageContent.length > 0 && /*#__PURE__*/_jsxDEV(ImageGrid, {\n        columns: 2,\n        children: [\" \", imageContent.map((item, index) => /*#__PURE__*/_jsxDEV(ImageCard, {\n          title: item.title,\n          imageUrl: item.imageUrl\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = Section;\nexport default Section;\nvar _c;\n$RefreshReg$(_c, \"Section\");","map":{"version":3,"names":["React","ImageCard","ImageGrid","Latex","jsxDEV","_jsxDEV","Section","id","title","content","imageContent","filter","item","type","textContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","text","length","columns","imageUrl","_c","$RefreshReg$"],"sources":["/Users/kelvin/Workspace/CS180/proj2/proj2_website/proj2/src/components/Section.js"],"sourcesContent":["import React from 'react';\nimport ImageCard from './ImageCard';\nimport ImageGrid from './ImageGrid';\nimport 'katex/dist/katex.min.css';\nimport Latex from 'react-latex-next';\n\nfunction Section({ id, title, content }) {\n  const imageContent = content.filter(item => item.type === 'image');\n  const textContent = content.filter(item => item.type !== 'image');\n\n  return (\n    <div id={id} className=\"mb-16\">\n      <h2 className=\"text-3xl font-bold mb-6 text-center\">{title}</h2>\n\n      <div className=\"space-y-6\">\n        {textContent.map((item, index) => {\n          if (item.type === 'paragraph') {\n            return (\n              <p key={index} className=\"text-lg text-gray-400 leading-relaxed break-words\">\n                {item.text}\n              </p>\n            );\n          }\n          if (item.type === 'math') {\n            return (\n              <div key={index} className=\"text-center text-2xl text-gray-300 break-words leading-relaxed\">\n                <Latex>{item.text}</Latex>\n              </div>\n            );\n          }\n          return null;\n        })}\n\n        {imageContent.length > 0 && (\n          <ImageGrid columns={2}> {/* Specify how many columns you want */}\n            {imageContent.map((item, index) => (\n              <ImageCard key={index} title={item.title} imageUrl={item.imageUrl} />\n            ))}\n          </ImageGrid>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Section;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,0BAA0B;AACjC,OAAOC,KAAK,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,OAAOA,CAAC;EAAEC,EAAE;EAAEC,KAAK;EAAEC;AAAQ,CAAC,EAAE;EACvC,MAAMC,YAAY,GAAGD,OAAO,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,OAAO,CAAC;EAClE,MAAMC,WAAW,GAAGL,OAAO,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,OAAO,CAAC;EAEjE,oBACER,OAAA;IAAKE,EAAE,EAAEA,EAAG;IAACQ,SAAS,EAAC,OAAO;IAAAC,QAAA,gBAC5BX,OAAA;MAAIU,SAAS,EAAC,qCAAqC;MAAAC,QAAA,EAAER;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEhEf,OAAA;MAAKU,SAAS,EAAC,WAAW;MAAAC,QAAA,GACvBF,WAAW,CAACO,GAAG,CAAC,CAACT,IAAI,EAAEU,KAAK,KAAK;QAChC,IAAIV,IAAI,CAACC,IAAI,KAAK,WAAW,EAAE;UAC7B,oBACER,OAAA;YAAeU,SAAS,EAAC,mDAAmD;YAAAC,QAAA,EACzEJ,IAAI,CAACW;UAAI,GADJD,KAAK;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CAAC;QAER;QACA,IAAIR,IAAI,CAACC,IAAI,KAAK,MAAM,EAAE;UACxB,oBACER,OAAA;YAAiBU,SAAS,EAAC,gEAAgE;YAAAC,QAAA,eACzFX,OAAA,CAACF,KAAK;cAAAa,QAAA,EAAEJ,IAAI,CAACW;YAAI;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC,GADlBE,KAAK;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CAAC;QAEV;QACA,OAAO,IAAI;MACb,CAAC,CAAC,EAEDV,YAAY,CAACc,MAAM,GAAG,CAAC,iBACtBnB,OAAA,CAACH,SAAS;QAACuB,OAAO,EAAE,CAAE;QAAAT,QAAA,GAAC,GAAC,EACrBN,YAAY,CAACW,GAAG,CAAC,CAACT,IAAI,EAAEU,KAAK,kBAC5BjB,OAAA,CAACJ,SAAS;UAAaO,KAAK,EAAEI,IAAI,CAACJ,KAAM;UAACkB,QAAQ,EAAEd,IAAI,CAACc;QAAS,GAAlDJ,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA+C,CACrE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CACZ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACO,EAAA,GArCQrB,OAAO;AAuChB,eAAeA,OAAO;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}