{"ast":null,"code":"var _jsxFileName = \"/Users/kelvin/Workspace/CS180/proj2/proj2_website/proj2/src/App.js\";\nimport React from 'react';\nimport Navbar from './components/Navbar';\nimport Section from './components/Section';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const sections = [{\n    id: 'edge-detector',\n    title: 'Edge Detection',\n    content: [{\n      type: 'paragraph',\n      text: 'Inspired by the partial derivative, the finite difference filters represent the respective partial derivatives in the x and y directions. These filters can be convolved with an input image to obtain edges.'\n    }, {\n      type: 'math',\n      text: '\\\\( \\\\frac{\\\\partial f}{\\\\partial x} = \\\\lim_{h \\\\to 0} \\\\frac{f(x+h) - f(x)}{h} \\\\ \\\\ \\\\quad \\\\frac{\\\\partial f}{\\\\partial y} = \\\\lim_{h \\\\to 0} \\\\frac{f(y+h) - f(y)}{h} \\\\)'\n    }, {\n      type: 'math',\n      text: '\\\\( D_x = \\\\begin{bmatrix} 1 & -1 \\\\end{bmatrix} \\\\quad D_y = \\\\begin{bmatrix} 1 \\\\\\\\ -1 \\\\end{bmatrix} \\\\)'\n    }, {\n      type: 'paragraph',\n      text: 'Convolving an image with the \\\\( D_x \\\\) filter will highlight vertical edges, while convolving with the \\\\( D_y \\\\) filter will highlight horizontal edges.'\n    }, {\n      type: 'paragraph',\n      text: 'The gradient magnitude can be computed element-wise from the \\\\( f * D_x \\\\) and \\\\( f * D_y \\\\) images.'\n    }, {\n      type: 'math',\n      text: '\\\\( \\\\text{Gradient Magnitude} = \\\\sqrt{\\\\left( \\\\frac{\\\\partial f}{\\\\partial x} \\\\right)^2 + \\\\left( \\\\frac{\\\\partial f}{\\\\partial y} \\\\right)^2} \\\\)'\n    }, {\n      type: 'paragraph',\n      text: 'After obtaining the \\\\( D_x \\\\), \\\\( D_y \\\\), and gradient magnitude images, we can binarize them using an appropriate threshold to get a clearer edge image.'\n    }, {\n      type: 'image',\n      title: 'Sobel Filter',\n      imageUrl: '/images/sobel.jpg'\n    }]\n  }\n  // Other sections...\n  ];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex min-h-screen bg-gradient-to-r from-gray-900 via-gray-800 to-black text-gray-300\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 px-4 lg:px-8 py-8 ml-64 w-full\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold text-center mb-12 text-white\",\n        children: \"Image Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), sections.map(section => /*#__PURE__*/_jsxDEV(Section, {\n        id: section.id,\n        title: section.title,\n        content: section.content\n      }, section.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Navbar","Section","jsxDEV","_jsxDEV","App","sections","id","title","content","type","text","imageUrl","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","section","_c","$RefreshReg$"],"sources":["/Users/kelvin/Workspace/CS180/proj2/proj2_website/proj2/src/App.js"],"sourcesContent":["import React from 'react';\nimport Navbar from './components/Navbar';\nimport Section from './components/Section';\n\nfunction App() {\n  const sections = [\n    {\n      id: 'edge-detector',\n      title: 'Edge Detection',\n      content: [\n        { type: 'paragraph', text: 'Inspired by the partial derivative, the finite difference filters represent the respective partial derivatives in the x and y directions. These filters can be convolved with an input image to obtain edges.' },\n        { type: 'math', text: '\\\\( \\\\frac{\\\\partial f}{\\\\partial x} = \\\\lim_{h \\\\to 0} \\\\frac{f(x+h) - f(x)}{h} \\\\ \\\\ \\\\quad \\\\frac{\\\\partial f}{\\\\partial y} = \\\\lim_{h \\\\to 0} \\\\frac{f(y+h) - f(y)}{h} \\\\)' },\n        { type: 'math', text: '\\\\( D_x = \\\\begin{bmatrix} 1 & -1 \\\\end{bmatrix} \\\\quad D_y = \\\\begin{bmatrix} 1 \\\\\\\\ -1 \\\\end{bmatrix} \\\\)' },\n        { type: 'paragraph', text: 'Convolving an image with the \\\\( D_x \\\\) filter will highlight vertical edges, while convolving with the \\\\( D_y \\\\) filter will highlight horizontal edges.' },\n        { type: 'paragraph', text: 'The gradient magnitude can be computed element-wise from the \\\\( f * D_x \\\\) and \\\\( f * D_y \\\\) images.' },\n        { type: 'math', text: '\\\\( \\\\text{Gradient Magnitude} = \\\\sqrt{\\\\left( \\\\frac{\\\\partial f}{\\\\partial x} \\\\right)^2 + \\\\left( \\\\frac{\\\\partial f}{\\\\partial y} \\\\right)^2} \\\\)' },\n        { type: 'paragraph', text: 'After obtaining the \\\\( D_x \\\\), \\\\( D_y \\\\), and gradient magnitude images, we can binarize them using an appropriate threshold to get a clearer edge image.' },\n        { type: 'image', title: 'Sobel Filter', imageUrl: '/images/sobel.jpg' },\n      ],\n    },\n    // Other sections...\n  ];\n\n  return (\n    <div className=\"flex min-h-screen bg-gradient-to-r from-gray-900 via-gray-800 to-black text-gray-300\">\n      <Navbar />\n      <div className=\"flex-1 px-4 lg:px-8 py-8 ml-64 w-full\"> {/* Adjusted padding and width */}\n        <h1 className=\"text-4xl font-bold text-center mb-12 text-white\">Image Filters</h1>\n\n        {sections.map((section) => (\n          <Section\n            key={section.id}\n            id={section.id}\n            title={section.title}\n            content={section.content}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,QAAQ,GAAG,CACf;IACEC,EAAE,EAAE,eAAe;IACnBC,KAAK,EAAE,gBAAgB;IACvBC,OAAO,EAAE,CACP;MAAEC,IAAI,EAAE,WAAW;MAAEC,IAAI,EAAE;IAAgN,CAAC,EAC5O;MAAED,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAE;IAAiL,CAAC,EACxM;MAAED,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAE;IAA8G,CAAC,EACrI;MAAED,IAAI,EAAE,WAAW;MAAEC,IAAI,EAAE;IAA+J,CAAC,EAC3L;MAAED,IAAI,EAAE,WAAW;MAAEC,IAAI,EAAE;IAA2G,CAAC,EACvI;MAAED,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAE;IAAyJ,CAAC,EAChL;MAAED,IAAI,EAAE,WAAW;MAAEC,IAAI,EAAE;IAAgK,CAAC,EAC5L;MAAED,IAAI,EAAE,OAAO;MAAEF,KAAK,EAAE,cAAc;MAAEI,QAAQ,EAAE;IAAoB,CAAC;EAE3E;EACA;EAAA,CACD;EAED,oBACER,OAAA;IAAKS,SAAS,EAAC,sFAAsF;IAAAC,QAAA,gBACnGV,OAAA,CAACH,MAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVd,OAAA;MAAKS,SAAS,EAAC,uCAAuC;MAAAC,QAAA,GAAC,GAAC,eACtDV,OAAA;QAAIS,SAAS,EAAC,iDAAiD;QAAAC,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAEjFZ,QAAQ,CAACa,GAAG,CAAEC,OAAO,iBACpBhB,OAAA,CAACF,OAAO;QAENK,EAAE,EAAEa,OAAO,CAACb,EAAG;QACfC,KAAK,EAAEY,OAAO,CAACZ,KAAM;QACrBC,OAAO,EAAEW,OAAO,CAACX;MAAQ,GAHpBW,OAAO,CAACb,EAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIhB,CACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACG,EAAA,GApCQhB,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}