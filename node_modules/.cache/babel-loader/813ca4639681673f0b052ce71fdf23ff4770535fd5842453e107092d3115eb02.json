{"ast":null,"code":"var _jsxFileName = \"/Users/kelvin/Workspace/CS180/proj2/proj2_website/proj2/src/components/Section.js\";\nimport React from 'react';\nimport ImageCard from './ImageCard';\nimport 'katex/dist/katex.min.css';\nimport Latex from 'react-latex-next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Section({\n  id,\n  title,\n  content\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: id,\n    className: \"mb-16\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6 text-center\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-6\",\n      children: content.map((item, index) => {\n        if (item.type === 'paragraph') {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg text-gray-400 leading-relaxed break-words\",\n            children: item.text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 15\n          }, this);\n        }\n        if (item.type === 'math') {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center text-2xl text-gray-300 break-words leading-relaxed\",\n            children: /*#__PURE__*/_jsxDEV(Latex, {\n              children: item.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this);\n        }\n        if (item.type === 'image') {\n          return /*#__PURE__*/_jsxDEV(ImageCard, {\n            title: item.title,\n            imageUrl: item.imageUrl\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 20\n          }, this);\n        }\n        return null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = Section;\nexport default Section;\nvar _c;\n$RefreshReg$(_c, \"Section\");","map":{"version":3,"names":["React","ImageCard","Latex","jsxDEV","_jsxDEV","Section","id","title","content","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","type","text","imageUrl","_c","$RefreshReg$"],"sources":["/Users/kelvin/Workspace/CS180/proj2/proj2_website/proj2/src/components/Section.js"],"sourcesContent":["import React from 'react';\nimport ImageCard from './ImageCard';\nimport 'katex/dist/katex.min.css';\nimport Latex from 'react-latex-next';\n\nfunction Section({ id, title, content }) {\n  return (\n    <div id={id} className=\"mb-16\">\n      <h2 className=\"text-3xl font-bold mb-6 text-center\">{title}</h2> {/* Centered title */}\n\n      <div className=\"space-y-6\">\n        {content.map((item, index) => {\n          if (item.type === 'paragraph') {\n            return (\n              <p key={index} className=\"text-lg text-gray-400 leading-relaxed break-words\">\n                {item.text}\n              </p>\n            );\n          }\n          if (item.type === 'math') {\n            return (\n              <div key={index} className=\"text-center text-2xl text-gray-300 break-words leading-relaxed\">\n                <Latex>{item.text}</Latex>\n              </div>\n            );\n          }\n          if (item.type === 'image') {\n            return <ImageCard key={index} title={item.title} imageUrl={item.imageUrl} />;\n          }\n          return null;\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Section;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,0BAA0B;AACjC,OAAOC,KAAK,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,OAAOA,CAAC;EAAEC,EAAE;EAAEC,KAAK;EAAEC;AAAQ,CAAC,EAAE;EACvC,oBACEJ,OAAA;IAAKE,EAAE,EAAEA,EAAG;IAACG,SAAS,EAAC,OAAO;IAAAC,QAAA,gBAC5BN,OAAA;MAAIK,SAAS,EAAC,qCAAqC;MAAAC,QAAA,EAAEH;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,KAAC,eAEjEV,OAAA;MAAKK,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBF,OAAO,CAACO,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QAC5B,IAAID,IAAI,CAACE,IAAI,KAAK,WAAW,EAAE;UAC7B,oBACEd,OAAA;YAAeK,SAAS,EAAC,mDAAmD;YAAAC,QAAA,EACzEM,IAAI,CAACG;UAAI,GADJF,KAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CAAC;QAER;QACA,IAAIE,IAAI,CAACE,IAAI,KAAK,MAAM,EAAE;UACxB,oBACEd,OAAA;YAAiBK,SAAS,EAAC,gEAAgE;YAAAC,QAAA,eACzFN,OAAA,CAACF,KAAK;cAAAQ,QAAA,EAAEM,IAAI,CAACG;YAAI;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC,GADlBG,KAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CAAC;QAEV;QACA,IAAIE,IAAI,CAACE,IAAI,KAAK,OAAO,EAAE;UACzB,oBAAOd,OAAA,CAACH,SAAS;YAAaM,KAAK,EAAES,IAAI,CAACT,KAAM;YAACa,QAAQ,EAAEJ,IAAI,CAACI;UAAS,GAAlDH,KAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA+C,CAAC;QAC9E;QACA,OAAO,IAAI;MACb,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACO,EAAA,GA7BQhB,OAAO;AA+BhB,eAAeA,OAAO;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}